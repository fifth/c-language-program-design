40011
程序填空，不要改变与输入输出有关的语句。
输入一个正整数 repeat (0<repeat<10)，做 repeat 次下列运算：
输入两个正整数m和n，输出它们的最小公倍数和最大公约数。
输入输出示例：括号内为说明
输入：
3        (repeat=3)
3 7      (m=3,n=7)
24 4     (m=24,n=4)
24 18    (m=24,n=18)
输出：
21 is the least common multiple of 3 and 7, 1 is the greatest common divisor of 3 and 7.
24 is the least common multiple of 24 and 4, 4 is the greatest common divisor of 24 and 4.
72 is the least common multiple of 24 and 18, 6 is the greatest common divisor of 24 and 18.


#include <stdio.h>
int main(void)
{
    int gcd, lcm, m, n;  
    int repeat, ri;  

    scanf("%d", &repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%d", &m);
        scanf("%d", &n);
        if(m <= 0 || n <= 0)
            printf("m <= 0 or n <= 0");
        else{
/*---------*/
            printf("%d is the least common multiple of %d and %d, %d is the greatest common divisor of %d and %d.\n", lcm, m, n, gcd, m, n);
        }
    }
}
-------------------------
40016
程序填空，不要改变与输入输出有关的语句。
输入一个正整数 repeat (0<repeat<10)，做 repeat 次下列运算：
输入一个整数 in，求它的位数以及各位数字之和。例如 123 的各位数字之和是 6，位数是 3。
输入输出示例：括号内是说明
输入
4        (repeat=4) 
0        (in=0) 
23456    (in=23456) 
-100     (in=-100) 
-1       (in=-1) 
输出
count = 1, sum = 0 	(0的位数是1, 各位数字之和是0)
count = 5, sum = 20 	(23456的位数是5, 各位数字之和是20)
count = 3, sum = 1 	(-100的位数是3, 各位数字之和是1)
count = 1, sum = 1 	(-1的位数是1, 各位数字之和是1)


#include <stdio.h>
int main(void)
{
    int count, in, sum;
    int repeat, ri;

    scanf("%d", &repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%d", &in);
/*---------*/
   	printf("count = %d, sum = %d\n", count, sum);
   }
}
-------------------------
40019
程序填空，不要改变与输入输出有关的语句。
输入一个正整数 repeat (0<repeat<10)，做 repeat 次下列运算：
皮球从 height（米）高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第 n 次落地时，在空中一共经过多少距离？第 n 次反弹的高度是多少？(输出保留1位小数) 
输入输出示例：括号内是说明
输入
3		(repeat=3)
10  2		(height=10m, n=2)
4   1		(height=2m, n=1)
100 8		(height=100m, n=8)
输出
distance=20.0, height=2.5	(第2次落地时，空中经过距离为20米, 第2次反弹高度为2.5米)
distance=4.0, height=2.0	(第1次落地时，空中经过距离为4米，第1次反弹高度为2米)
distance=298.4, height=0.4	(第8次落地时，空中经过距离为298.4米，第8次反弹高度为0.4米)


#include <stdio.h>
int main(void)
{
    int i, n;
    int repeat, ri;
    double distance, height; 

    scanf("%d", &repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%lf%d", &height, &n);
/*---------*/
      	printf("distance = %.1f, height = %.1f\n", distance, height);
   }
}
-------------------------
40021
程序填空，不要改变与输入输出有关的语句。
输入一个正整数 repeat (0<repeat<10)，做 repeat 次下列运算：
输入1个正整数n，计算下式的前n+1项之和(保留4位小数)。要求使用嵌套循环。
   e = 1＋1/1!＋1/2!＋....＋1/n!  
输入输出示例：括号内为说明
输入：
2       (repeat=2)
2       (n=2)
10      (n=10)
输出：
e = 2.5000
e = 2.7183


#include "stdio.h"
int main(void)
{
    int i, j, n;
    int repeat, ri;
    double e, product;

    scanf("%d", &repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%d", &n);
/*---------*/
    	printf("e = %0.4f\n", e);
  }
}
-------------------------
40023
程序填空，不要改变与输入输出有关的语句。
输入一个正整数 repeat (0<repeat<10)，做 repeat 次下列运算：
输入两个正整数 m 和 n(1<=m, n<=1000)，输出 m 到 n之间的所有完数，并输出其因子。一个数如恰好等于它的因子之和，这个数称为完数，例如，6=1+2+3，其中1、2、3为因子，6为因子和。
输出使用以下语句：
printf("%d = 1", number);
printf(" + %d", factor);
printf("\n");
输入输出示例：括号内为说明
输入：
2          (repeat=2)
1 30       (m=1, n=30)
400 500    (m=400, n=500)
输出
result:
1 = 1
6 = 1 + 2 + 3
28 = 1 + 2 + 4 + 7 + 14
result:
496 = 1 + 2 + 4 + 8 + 16 + 31 + 62 + 124 + 248


#include <stdio.h>
int main(void)
{
    int factor, m, n, number, sum;
    int repeat, ri;

    scanf("%d",&repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%d%d", &m, &n);
        printf("result:\n"); 
/*---------*/
    }
}
-------------------------
40025
程序填空，不要改变与输入输出有关的语句。
验证哥德巴赫猜想：任何一个大于6的偶数均可表示为两个素数之和。例如6=3+3，8=3+5，…，18=7+11。
输入两个正整数 m 和 n(6<=m, n<=100)，将 m 到 n 之间的偶数表示成两个素数之和，打印时一行打印5组。
输出使用语句：printf("%d=%d+%d ", number, i, number - i);

输入输出示例：括号内为说明
输入：
89 100	(m=90, n=100)
输出：
90=7+83 92=3+89 94=5+89 96=7+89 98=19+79
100=3+97


#include "stdio.h"
#include "math.h"
int main(void)
{
    int count, i, j, k, m, n, number;

    scanf("%d%d", &m, &n);
    if(m % 2 != 0) m = m + 1;
    if(m >= 6){
/*---------*/
    }
}
-------------------------
40026
程序填空，不要改变与输入输出有关的语句。
验证哥德巴赫猜想：任何一个大于6的偶数均可表示为两个素数之和。例如6=3+3，8=3+5，…，18=7+11。
输入两个正整数 m 和 n(6<=m, n<=100)，将 m 到 n 之间的偶数表示成两个素数之和，打印时一行打印5组。
输出使用语句：printf("%d=%d+%d ", number, i, number - i);

输入输出示例：括号内为说明
输入：
89 100	(m=90, n=100)
输出：
90=7+83 92=3+89 94=5+89 96=7+89 98=19+79
100=3+97


#include "stdio.h"
#include "math.h"
int main(void)
{
    int count, i, j, k, m, n, number;

    scanf("%d%d", &m, &n);
    if(m % 2 != 0) m = m + 1;
    if(m >= 6){
/*---------*/
    }
}
-------------------------
40027
程序填空，不要改变与输入输出有关的语句。
输入一个正整数repeat (0<repeat<10)，做repeat次下列运算：
输入一个整数，从高位开始逐位输出它的各位数字。
输出语句：printf("%-2d", digit);
例：括号内是说明
输入
3   (repeat=3) 
23456
-600
8
输出
2 3 4 5 6
6 0 0
8


#include <stdio.h>
int main(void)
{
    int digit, in, power, temp;
    int repeat, ri;

    scanf("%d", &repeat);
    for(ri = 1; ri <= repeat; ri++){
        scanf("%d", &in);
/*---------*/
     	printf("\n");
   }
}